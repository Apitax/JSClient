/**
 * Apitax
 * The API for the frontend of Apitax
 *
 * OpenAPI spec version: 2
 * Contact: shawn.clake@nopatience.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthResponse from './model/AuthResponse';
import Command from './model/Command';
import ErrorResponse from './model/ErrorResponse';
import Execute from './model/Execute';
import Response from './model/Response';
import Script from './model/Script';
import ScriptCreate from './model/ScriptCreate';
import ScriptDelete from './model/ScriptDelete';
import ScriptRename from './model/ScriptRename';
import ScriptSave from './model/ScriptSave';
import User from './model/User';
import UserAuth from './model/UserAuth';
import UserCreate from './model/UserCreate';
import UserDelete from './model/UserDelete';
import UserSave from './model/UserSave';
import ApiApi from './api/ApiApi';
import ApitaxApi from './api/ApitaxApi';
import CommandtaxApi from './api/CommandtaxApi';
import DriversApi from './api/DriversApi';
import ScriptaxApi from './api/ScriptaxApi';


/**
* The_API_for_the_frontend_of_Apitax.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Apitax = require('index'); // See note below*.
* var xxxSvc = new Apitax.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Apitax.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Apitax.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Apitax.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthResponse model constructor.
     * @property {module:model/AuthResponse}
     */
    AuthResponse,

    /**
     * The Command model constructor.
     * @property {module:model/Command}
     */
    Command,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Execute model constructor.
     * @property {module:model/Execute}
     */
    Execute,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The Script model constructor.
     * @property {module:model/Script}
     */
    Script,

    /**
     * The ScriptCreate model constructor.
     * @property {module:model/ScriptCreate}
     */
    ScriptCreate,

    /**
     * The ScriptDelete model constructor.
     * @property {module:model/ScriptDelete}
     */
    ScriptDelete,

    /**
     * The ScriptRename model constructor.
     * @property {module:model/ScriptRename}
     */
    ScriptRename,

    /**
     * The ScriptSave model constructor.
     * @property {module:model/ScriptSave}
     */
    ScriptSave,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserAuth model constructor.
     * @property {module:model/UserAuth}
     */
    UserAuth,

    /**
     * The UserCreate model constructor.
     * @property {module:model/UserCreate}
     */
    UserCreate,

    /**
     * The UserDelete model constructor.
     * @property {module:model/UserDelete}
     */
    UserDelete,

    /**
     * The UserSave model constructor.
     * @property {module:model/UserSave}
     */
    UserSave,

    /**
    * The ApiApi service constructor.
    * @property {module:api/ApiApi}
    */
    ApiApi,

    /**
    * The ApitaxApi service constructor.
    * @property {module:api/ApitaxApi}
    */
    ApitaxApi,

    /**
    * The CommandtaxApi service constructor.
    * @property {module:api/CommandtaxApi}
    */
    CommandtaxApi,

    /**
    * The DriversApi service constructor.
    * @property {module:api/DriversApi}
    */
    DriversApi,

    /**
    * The ScriptaxApi service constructor.
    * @property {module:api/ScriptaxApi}
    */
    ScriptaxApi
};
